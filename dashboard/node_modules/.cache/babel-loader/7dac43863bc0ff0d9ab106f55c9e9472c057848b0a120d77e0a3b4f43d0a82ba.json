{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Coding\\\\WEB_D\\\\Appnacollage\\\\ZERODHA CLONE\\\\dashboard\\\\src\\\\components\\\\GeneralContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BuyActionWindow from \"./BuyActionWindow\";\nimport SellActionWindow from \"./SellActionWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralContext = /*#__PURE__*/React.createContext({\n  openBuyWindow: uid => {},\n  closeBuyWindow: () => {},\n  openSellWindow: uid => {},\n  closeSellWindow: () => {},\n  refreshData: () => {},\n  holdings: [],\n  positions: [],\n  orders: []\n});\nexport const GeneralContextProvider = props => {\n  _s();\n  const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\n  const [isSellWindowOpen, setIsSellWindowOpen] = useState(false);\n  const [selectedStockUID, setSelectedStockUID] = useState(\"\");\n  const [holdings, setHoldings] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Fetch latest data\n  const refreshData = async () => {\n    try {\n      const [h, p, o] = await Promise.all([axios.get(\"http://localhost:3002/allHoldings\"), axios.get(\"http://localhost:3002/allPositions\"), axios.get(\"http://localhost:3002/api/orders\") // you need to make GET /api/orders in backend\n      ]);\n      setHoldings(h.data);\n      setPositions(p.data);\n      setOrders(o.data);\n    } catch (error) {\n      console.error(\"Error refreshing data:\", error);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const handleOpenBuyWindow = uid => {\n    setIsBuyWindowOpen(true);\n    setSelectedStockUID(uid);\n  };\n  const handleCloseBuyWindow = () => {\n    setIsBuyWindowOpen(false);\n    setSelectedStockUID(\"\");\n  };\n  const handleOpenSellWindow = uid => {\n    setIsSellWindowOpen(true);\n    setSelectedStockUID(uid);\n  };\n  const handleCloseSellWindow = () => {\n    setIsSellWindowOpen(false);\n    setSelectedStockUID(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(GeneralContext.Provider, {\n    value: {\n      openBuyWindow: handleOpenBuyWindow,\n      closeBuyWindow: handleCloseBuyWindow,\n      openSellWindow: handleOpenSellWindow,\n      closeSellWindow: handleCloseSellWindow,\n      refreshData,\n      holdings,\n      positions,\n      orders\n    },\n    children: [props.children, isBuyWindowOpen && /*#__PURE__*/_jsxDEV(BuyActionWindow, {\n      uid: selectedStockUID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }, this), isSellWindowOpen && /*#__PURE__*/_jsxDEV(SellActionWindow, {\n      uid: selectedStockUID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralContextProvider, \"kgoQIeNZlH3d6sT9fm2+LvZuaYQ=\");\n_c = GeneralContextProvider;\nexport default GeneralContext;\nvar _c;\n$RefreshReg$(_c, \"GeneralContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","axios","BuyActionWindow","SellActionWindow","jsxDEV","_jsxDEV","GeneralContext","createContext","openBuyWindow","uid","closeBuyWindow","openSellWindow","closeSellWindow","refreshData","holdings","positions","orders","GeneralContextProvider","props","_s","isBuyWindowOpen","setIsBuyWindowOpen","isSellWindowOpen","setIsSellWindowOpen","selectedStockUID","setSelectedStockUID","setHoldings","setPositions","setOrders","h","p","o","Promise","all","get","data","error","console","handleOpenBuyWindow","handleCloseBuyWindow","handleOpenSellWindow","handleCloseSellWindow","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Coding/WEB_D/Appnacollage/ZERODHA CLONE/dashboard/src/components/GeneralContext.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BuyActionWindow from \"./BuyActionWindow\";\r\nimport SellActionWindow from \"./SellActionWindow\";\r\n\r\nconst GeneralContext = React.createContext({\r\n  openBuyWindow: (uid) => {},\r\n  closeBuyWindow: () => {},\r\n  openSellWindow: (uid) => {},\r\n  closeSellWindow: () => {},\r\n  refreshData: () => {},\r\n  holdings: [],\r\n  positions: [],\r\n  orders: []\r\n});\r\n\r\nexport const GeneralContextProvider = (props) => {\r\n  const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\r\n  const [isSellWindowOpen, setIsSellWindowOpen] = useState(false);\r\n  const [selectedStockUID, setSelectedStockUID] = useState(\"\");\r\n  const [holdings, setHoldings] = useState([]);\r\n  const [positions, setPositions] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Fetch latest data\r\n  const refreshData = async () => {\r\n    try {\r\n      const [h, p, o] = await Promise.all([\r\n        axios.get(\"http://localhost:3002/allHoldings\"),\r\n        axios.get(\"http://localhost:3002/allPositions\"),\r\n        axios.get(\"http://localhost:3002/api/orders\") // you need to make GET /api/orders in backend\r\n      ]);\r\n      setHoldings(h.data);\r\n      setPositions(p.data);\r\n      setOrders(o.data);\r\n    } catch (error) {\r\n      console.error(\"Error refreshing data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const handleOpenBuyWindow = (uid) => {\r\n    setIsBuyWindowOpen(true);\r\n    setSelectedStockUID(uid);\r\n  };\r\n\r\n  const handleCloseBuyWindow = () => {\r\n    setIsBuyWindowOpen(false);\r\n    setSelectedStockUID(\"\");\r\n  };\r\n\r\n  const handleOpenSellWindow = (uid) => {\r\n    setIsSellWindowOpen(true);\r\n    setSelectedStockUID(uid);\r\n  };\r\n\r\n  const handleCloseSellWindow = () => {\r\n    setIsSellWindowOpen(false);\r\n    setSelectedStockUID(\"\");\r\n  };\r\n\r\n  return (\r\n    <GeneralContext.Provider\r\n      value={{\r\n        openBuyWindow: handleOpenBuyWindow,\r\n        closeBuyWindow: handleCloseBuyWindow,\r\n        openSellWindow: handleOpenSellWindow,\r\n        closeSellWindow: handleCloseSellWindow,\r\n        refreshData,\r\n        holdings,\r\n        positions,\r\n        orders\r\n      }}\r\n    >\r\n      {props.children}\r\n      {isBuyWindowOpen && <BuyActionWindow uid={selectedStockUID} />}\r\n      {isSellWindowOpen && <SellActionWindow uid={selectedStockUID} />}\r\n    </GeneralContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GeneralContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}