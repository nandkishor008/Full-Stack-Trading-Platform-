{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Coding\\\\ZERODHA CLONE\\\\dashboard\\\\src\\\\components\\\\Holdings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport GeneralContext from './GeneralContext'; // Make sure this path is correct\nimport { VerticalGraph } from \"./VerticalGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holdings = () => {\n  _s();\n  // ✅ Get the 'holdings' array directly from our central context\n  const {\n    holdings\n  } = useContext(GeneralContext);\n\n  // Optional: Add a loading state from context if you have one\n  if (!holdings) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading holdings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  const labels = holdings.map(stock => stock.name);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Stock Price\",\n      data: holdings.map(stock => stock.price),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: [\"Holdings (\", holdings.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Instrument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Qty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Avg. cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"LTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cur. val\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"P&L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Net chg.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Day chg.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: holdings.map((stock, index) => {\n            const curValue = stock.price * stock.qty;\n            const isProfit = curValue - stock.avg * stock.qty >= 0.0;\n            const profClass = isProfit ? \"profit\" : \"loss\";\n            const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.avg.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.price.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: curValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: profClass,\n                children: (curValue - stock.avg * stock.qty).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: profClass,\n                children: stock.net\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: dayClass,\n                children: stock.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Holdings, \"y4MnzSsYj8DY7opOitX2bRRZAI0=\");\n_c = Holdings;\nexport default Holdings;\nvar _c;\n$RefreshReg$(_c, \"Holdings\");","map":{"version":3,"names":["React","useContext","GeneralContext","VerticalGraph","jsxDEV","_jsxDEV","Fragment","_Fragment","Holdings","_s","holdings","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","stock","name","data","datasets","label","price","backgroundColor","className","length","index","curValue","qty","isProfit","avg","profClass","dayClass","isLoss","toFixed","net","day","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Coding/ZERODHA CLONE/dashboard/src/components/Holdings.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport GeneralContext from './GeneralContext'; // Make sure this path is correct\nimport { VerticalGraph } from \"./VerticalGraph\";\n\nconst Holdings = () => {\n  // ✅ Get the 'holdings' array directly from our central context\n  const { holdings } = useContext(GeneralContext);\n\n  // Optional: Add a loading state from context if you have one\n  if (!holdings) {\n    return <p>Loading holdings...</p>;\n  }\n  \n  const labels = holdings.map((stock) => stock.name);\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: holdings.map((stock) => stock.price),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <>\n      <h3 className=\"title\">Holdings ({holdings.length})</h3>\n      <div className=\"order-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Instrument</th>\n              <th>Qty.</th>\n              <th>Avg. cost</th>\n              <th>LTP</th>\n              <th>Cur. val</th>\n              <th>P&L</th>\n              <th>Net chg.</th>\n              <th>Day chg.</th>\n            </tr>\n          </thead>\n          <tbody>\n            {holdings.map((stock, index) => {\n              const curValue = stock.price * stock.qty;\n              const isProfit = curValue - stock.avg * stock.qty >= 0.0;\n              const profClass = isProfit ? \"profit\" : \"loss\";\n              const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n              return (\n                <tr key={index}>\n                  <td>{stock.name}</td>\n                  <td>{stock.qty}</td>\n                  <td>{stock.avg.toFixed(2)}</td>\n                  <td>{stock.price.toFixed(2)}</td>\n                  <td>{curValue.toFixed(2)}</td>\n                  <td className={profClass}>\n                    {(curValue - stock.avg * stock.qty).toFixed(2)}\n                  </td>\n                  <td className={profClass}>{stock.net}</td>\n                  <td className={dayClass}>{stock.day}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      {/* Your summary rows and graph */}\n    </>\n  );\n};\n\nexport default Holdings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}