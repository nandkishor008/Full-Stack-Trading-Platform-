{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Coding\\\\ZERODHA CLONE\\\\dashboard\\\\src\\\\components\\\\Holdings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useMemo } from 'react';\nimport GeneralContext from './GeneralContext'; // Make sure this path is correct\nimport { VerticalGraph } from \"./VerticalGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holdings = () => {\n  _s();\n  const {\n    holdings\n  } = useContext(GeneralContext);\n\n  // ✅ Calculate the summary values from the holdings data\n  const portfolioSummary = useMemo(() => {\n    if (!holdings || holdings.length === 0) {\n      return {\n        investment: 0,\n        currentValue: 0,\n        totalPandL: 0,\n        pAndLPercentage: 0\n      };\n    }\n    const totalInvestment = holdings.reduce((acc, stock) => acc + stock.avg * stock.qty, 0);\n    const currentValue = holdings.reduce((acc, stock) => acc + stock.price * stock.qty, 0);\n    const totalPandL = currentValue - totalInvestment;\n    const pAndLPercentage = totalInvestment === 0 ? 0 : totalPandL / totalInvestment * 100;\n    return {\n      investment: totalInvestment,\n      currentValue: currentValue,\n      totalPandL: totalPandL,\n      pAndLPercentage: pAndLPercentage\n    };\n  }, [holdings]); // This calculation only re-runs when the holdings data changes\n\n  if (!holdings) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading holdings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  const labels = holdings.map(stock => stock.name);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Stock Price\",\n      data: holdings.map(stock => stock.price),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: [\"Holdings (\", holdings.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: holdings.map((stock, index) => {\n            const curValue = stock.price * stock.qty;\n            const pAndL = curValue - stock.avg * stock.qty;\n            const isProfit = pAndL >= 0;\n            const profClass = isProfit ? \"profit\" : \"loss\";\n            const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.avg.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stock.price.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: curValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: profClass,\n                children: pAndL.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: profClass,\n                children: stock.net\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: dayClass,\n                children: stock.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: portfolioSummary.investment.toLocaleString('en-IN', {\n            maximumFractionDigits: 2\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total investment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: portfolioSummary.currentValue.toLocaleString('en-IN', {\n            maximumFractionDigits: 2\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Current value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: portfolioSummary.totalPandL >= 0 ? 'profit' : 'loss',\n          children: [portfolioSummary.totalPandL.toLocaleString('en-IN', {\n            maximumFractionDigits: 2\n          }), \"(\", portfolioSummary.pAndLPercentage.toFixed(2), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"P&L\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VerticalGraph, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Holdings, \"1PKhRPLdo9NqFlgoEEqEB841xgg=\");\n_c = Holdings;\nexport default Holdings;\nvar _c;\n$RefreshReg$(_c, \"Holdings\");","map":{"version":3,"names":["React","useContext","useMemo","GeneralContext","VerticalGraph","jsxDEV","_jsxDEV","Fragment","_Fragment","Holdings","_s","holdings","portfolioSummary","length","investment","currentValue","totalPandL","pAndLPercentage","totalInvestment","reduce","acc","stock","avg","qty","price","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","name","data","datasets","label","backgroundColor","className","index","curValue","pAndL","isProfit","profClass","dayClass","isLoss","toFixed","net","day","toLocaleString","maximumFractionDigits","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Coding/ZERODHA CLONE/dashboard/src/components/Holdings.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport GeneralContext from './GeneralContext'; // Make sure this path is correct\nimport { VerticalGraph } from \"./VerticalGraph\";\n\nconst Holdings = () => {\n  const { holdings } = useContext(GeneralContext);\n\n  // ✅ Calculate the summary values from the holdings data\n  const portfolioSummary = useMemo(() => {\n    if (!holdings || holdings.length === 0) {\n      return { investment: 0, currentValue: 0, totalPandL: 0, pAndLPercentage: 0 };\n    }\n\n    const totalInvestment = holdings.reduce((acc, stock) => acc + (stock.avg * stock.qty), 0);\n    const currentValue = holdings.reduce((acc, stock) => acc + (stock.price * stock.qty), 0);\n    const totalPandL = currentValue - totalInvestment;\n    const pAndLPercentage = totalInvestment === 0 ? 0 : (totalPandL / totalInvestment) * 100;\n\n    return {\n      investment: totalInvestment,\n      currentValue: currentValue,\n      totalPandL: totalPandL,\n      pAndLPercentage: pAndLPercentage,\n    };\n  }, [holdings]); // This calculation only re-runs when the holdings data changes\n\n  if (!holdings) {\n    return <p>Loading holdings...</p>;\n  }\n  \n  const labels = holdings.map((stock) => stock.name);\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: holdings.map((stock) => stock.price),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <>\n      <h3 className=\"title\">Holdings ({holdings.length})</h3>\n      <div className=\"order-table\">\n        <table>\n          <thead>\n            {/* ... table headers ... */}\n          </thead>\n          <tbody>\n            {holdings.map((stock, index) => {\n              const curValue = stock.price * stock.qty;\n              const pAndL = curValue - (stock.avg * stock.qty);\n              const isProfit = pAndL >= 0;\n              const profClass = isProfit ? \"profit\" : \"loss\";\n              const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n              return (\n                <tr key={index}>\n                  <td>{stock.name}</td>\n                  <td>{stock.qty}</td>\n                  <td>{stock.avg.toFixed(2)}</td>\n                  <td>{stock.price.toFixed(2)}</td>\n                  <td>{curValue.toFixed(2)}</td>\n                  <td className={profClass}>{pAndL.toFixed(2)}</td>\n                  <td className={profClass}>{stock.net}</td>\n                  <td className={dayClass}>{stock.day}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      \n      {/* ✅ DYNAMIC SUMMARY SECTION */}\n      <div className=\"row\">\n        <div className=\"col\">\n          <h5>{portfolioSummary.investment.toLocaleString('en-IN', { maximumFractionDigits: 2 })}</h5>\n          <p>Total investment</p>\n        </div>\n        <div className=\"col\">\n          <h5>{portfolioSummary.currentValue.toLocaleString('en-IN', { maximumFractionDigits: 2 })}</h5>\n          <p>Current value</p>\n        </div>\n        <div className=\"col\">\n          <h5 className={portfolioSummary.totalPandL >= 0 ? 'profit' : 'loss'}>\n            {portfolioSummary.totalPandL.toLocaleString('en-IN', { maximumFractionDigits: 2 })} \n            ({portfolioSummary.pAndLPercentage.toFixed(2)}%)\n          </h5>\n          <p>P&L</p>\n        </div>\n      </div>\n      \n      <VerticalGraph data={data}/>\n    </>\n  );\n};\n\nexport default Holdings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAC/C,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACE,cAAc,CAAC;;EAE/C;EACA,MAAMS,gBAAgB,GAAGV,OAAO,CAAC,MAAM;IACrC,IAAI,CAACS,QAAQ,IAAIA,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;MACtC,OAAO;QAAEC,UAAU,EAAE,CAAC;QAAEC,YAAY,EAAE,CAAC;QAAEC,UAAU,EAAE,CAAC;QAAEC,eAAe,EAAE;MAAE,CAAC;IAC9E;IAEA,MAAMC,eAAe,GAAGP,QAAQ,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAIC,KAAK,CAACC,GAAG,GAAGD,KAAK,CAACE,GAAI,EAAE,CAAC,CAAC;IACzF,MAAMR,YAAY,GAAGJ,QAAQ,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAIC,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACE,GAAI,EAAE,CAAC,CAAC;IACxF,MAAMP,UAAU,GAAGD,YAAY,GAAGG,eAAe;IACjD,MAAMD,eAAe,GAAGC,eAAe,KAAK,CAAC,GAAG,CAAC,GAAIF,UAAU,GAAGE,eAAe,GAAI,GAAG;IAExF,OAAO;MACLJ,UAAU,EAAEI,eAAe;MAC3BH,YAAY,EAAEA,YAAY;MAC1BC,UAAU,EAAEA,UAAU;MACtBC,eAAe,EAAEA;IACnB,CAAC;EACH,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,IAAI,CAACA,QAAQ,EAAE;IACb,oBAAOL,OAAA;MAAAmB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnC;EAEA,MAAMC,MAAM,GAAGnB,QAAQ,CAACoB,GAAG,CAAEV,KAAK,IAAKA,KAAK,CAACW,IAAI,CAAC;EAClD,MAAMC,IAAI,GAAG;IACXH,MAAM;IACNI,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBF,IAAI,EAAEtB,QAAQ,CAACoB,GAAG,CAAEV,KAAK,IAAKA,KAAK,CAACG,KAAK,CAAC;MAC1CY,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACE9B,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAI+B,SAAS,EAAC,OAAO;MAAAZ,QAAA,GAAC,YAAU,EAACd,QAAQ,CAACE,MAAM,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDvB,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAZ,QAAA,eAC1BnB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEO,CAAC,eACRvB,OAAA;UAAAmB,QAAA,EACGd,QAAQ,CAACoB,GAAG,CAAC,CAACV,KAAK,EAAEiB,KAAK,KAAK;YAC9B,MAAMC,QAAQ,GAAGlB,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACE,GAAG;YACxC,MAAMiB,KAAK,GAAGD,QAAQ,GAAIlB,KAAK,CAACC,GAAG,GAAGD,KAAK,CAACE,GAAI;YAChD,MAAMkB,QAAQ,GAAGD,KAAK,IAAI,CAAC;YAC3B,MAAME,SAAS,GAAGD,QAAQ,GAAG,QAAQ,GAAG,MAAM;YAC9C,MAAME,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,GAAG,MAAM,GAAG,QAAQ;YACjD,oBACEtC,OAAA;cAAAmB,QAAA,gBACEnB,OAAA;gBAAAmB,QAAA,EAAKJ,KAAK,CAACW;cAAI;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrBvB,OAAA;gBAAAmB,QAAA,EAAKJ,KAAK,CAACE;cAAG;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBvB,OAAA;gBAAAmB,QAAA,EAAKJ,KAAK,CAACC,GAAG,CAACuB,OAAO,CAAC,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC/BvB,OAAA;gBAAAmB,QAAA,EAAKJ,KAAK,CAACG,KAAK,CAACqB,OAAO,CAAC,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjCvB,OAAA;gBAAAmB,QAAA,EAAKc,QAAQ,CAACM,OAAO,CAAC,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9BvB,OAAA;gBAAI+B,SAAS,EAAEK,SAAU;gBAAAjB,QAAA,EAAEe,KAAK,CAACK,OAAO,CAAC,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjDvB,OAAA;gBAAI+B,SAAS,EAAEK,SAAU;gBAAAjB,QAAA,EAAEJ,KAAK,CAACyB;cAAG;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1CvB,OAAA;gBAAI+B,SAAS,EAAEM,QAAS;gBAAAlB,QAAA,EAAEJ,KAAK,CAAC0B;cAAG;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GARlCS,KAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASV,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNvB,OAAA;MAAK+B,SAAS,EAAC,KAAK;MAAAZ,QAAA,gBAClBnB,OAAA;QAAK+B,SAAS,EAAC,KAAK;QAAAZ,QAAA,gBAClBnB,OAAA;UAAAmB,QAAA,EAAKb,gBAAgB,CAACE,UAAU,CAACkC,cAAc,CAAC,OAAO,EAAE;YAAEC,qBAAqB,EAAE;UAAE,CAAC;QAAC;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5FvB,OAAA;UAAAmB,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACNvB,OAAA;QAAK+B,SAAS,EAAC,KAAK;QAAAZ,QAAA,gBAClBnB,OAAA;UAAAmB,QAAA,EAAKb,gBAAgB,CAACG,YAAY,CAACiC,cAAc,CAAC,OAAO,EAAE;YAAEC,qBAAqB,EAAE;UAAE,CAAC;QAAC;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9FvB,OAAA;UAAAmB,QAAA,EAAG;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACNvB,OAAA;QAAK+B,SAAS,EAAC,KAAK;QAAAZ,QAAA,gBAClBnB,OAAA;UAAI+B,SAAS,EAAEzB,gBAAgB,CAACI,UAAU,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAO;UAAAS,QAAA,GACjEb,gBAAgB,CAACI,UAAU,CAACgC,cAAc,CAAC,OAAO,EAAE;YAAEC,qBAAqB,EAAE;UAAE,CAAC,CAAC,EAAC,GAClF,EAACrC,gBAAgB,CAACK,eAAe,CAAC4B,OAAO,CAAC,CAAC,CAAC,EAAC,IAChD;QAAA;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLvB,OAAA;UAAAmB,QAAA,EAAG;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvB,OAAA,CAACF,aAAa;MAAC6B,IAAI,EAAEA;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC5B,CAAC;AAEP,CAAC;AAACnB,EAAA,CA5FID,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AA8Fd,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}