{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Coding\\\\ZERODHA CLONE\\\\dashboard\\\\src\\\\components\\\\GeneralContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BuyActionWindow from \"./BuyActionWindow\";\nimport SellActionWindow from \"./SellActionWindow\";\n\n// Define the shape of the context for better autocompletion\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralContext = /*#__PURE__*/React.createContext({\n  openBuyWindow: uid => {},\n  closeBuyWindow: () => {},\n  openSellWindow: uid => {},\n  closeSellWindow: () => {},\n  refreshData: () => {},\n  user: null,\n  // User object will be stored here\n  holdings: [],\n  positions: [],\n  orders: []\n});\nexport const GeneralContextProvider = props => {\n  _s();\n  const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\n  const [isSellWindowOpen, setIsSellWindowOpen] = useState(false);\n  const [selectedStockUID, setSelectedStockUID] = useState(\"\");\n  const [holdings, setHoldings] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // 1. State to hold the logged-in user's data\n  const [user, setUser] = useState(null);\n\n  // 2. Fetch the user once when the app loads\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3002/me\", {\n          withCredentials: true // This sends the secure session cookie\n        });\n        setUser(res.data); // Store the user object in our state\n      } catch (err) {\n        console.error(\"User not authenticated.\", err);\n      }\n    };\n    fetchUser();\n  }, []);\n\n  // 3. Make the data refresh function secure and dependent on the user\n  const refreshData = async () => {\n    if (!user) return; // Don't fetch if no user is logged in\n\n    try {\n      const [h, p, o] = await Promise.all([\n      // Ensure the cookie is sent with every request\n      axios.get(\"http://localhost:3002/allHoldings\", {\n        withCredentials: true\n      }), axios.get(\"http://localhost:3002/allPositions\", {\n        withCredentials: true\n      }), axios.get(\"http://localhost:3002/api/orders\", {\n        withCredentials: true\n      })]);\n      setHoldings(h.data);\n      setPositions(p.data);\n      setOrders(o.data);\n    } catch (error) {\n      console.error(\"Error refreshing data:\", error);\n    }\n  };\n\n  // 4. Refresh the user's data only after they have been successfully identified\n  useEffect(() => {\n    refreshData();\n  }, [user]); // This effect runs when the user state is set\n\n  const handleOpenBuyWindow = uid => {\n    setIsBuyWindowOpen(true);\n    setSelectedStockUID(uid);\n  };\n  const handleCloseBuyWindow = () => {\n    setIsBuyWindowOpen(false);\n    setSelectedStockUID(\"\");\n  };\n  const handleOpenSellWindow = uid => {\n    setIsSellWindowOpen(true);\n    setSelectedStockUID(uid);\n  };\n  const handleCloseSellWindow = () => {\n    setIsSellWindowOpen(false);\n    setSelectedStockUID(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(GeneralContext.Provider, {\n    value: {\n      openBuyWindow: handleOpenBuyWindow,\n      closeBuyWindow: handleCloseBuyWindow,\n      openSellWindow: handleOpenSellWindow,\n      closeSellWindow: handleCloseSellWindow,\n      refreshData,\n      user,\n      // 5. Provide the user object to all child components\n      holdings,\n      positions,\n      orders\n    },\n    children: [props.children, isBuyWindowOpen && /*#__PURE__*/_jsxDEV(BuyActionWindow, {\n      uid: selectedStockUID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }, this), isSellWindowOpen && /*#__PURE__*/_jsxDEV(SellActionWindow, {\n      uid: selectedStockUID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralContextProvider, \"JDkVhw2lzzYHE0le4wOBYYuKYPQ=\");\n_c = GeneralContextProvider;\nexport default GeneralContext;\nvar _c;\n$RefreshReg$(_c, \"GeneralContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","axios","BuyActionWindow","SellActionWindow","jsxDEV","_jsxDEV","GeneralContext","createContext","openBuyWindow","uid","closeBuyWindow","openSellWindow","closeSellWindow","refreshData","user","holdings","positions","orders","GeneralContextProvider","props","_s","isBuyWindowOpen","setIsBuyWindowOpen","isSellWindowOpen","setIsSellWindowOpen","selectedStockUID","setSelectedStockUID","setHoldings","setPositions","setOrders","setUser","fetchUser","res","get","withCredentials","data","err","console","error","h","p","o","Promise","all","handleOpenBuyWindow","handleCloseBuyWindow","handleOpenSellWindow","handleCloseSellWindow","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Coding/ZERODHA CLONE/dashboard/src/components/GeneralContext.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BuyActionWindow from \"./BuyActionWindow\";\r\nimport SellActionWindow from \"./SellActionWindow\";\r\n\r\n// Define the shape of the context for better autocompletion\r\nconst GeneralContext = React.createContext({\r\n  openBuyWindow: (uid) => {},\r\n  closeBuyWindow: () => {},\r\n  openSellWindow: (uid) => {},\r\n  closeSellWindow: () => {},\r\n  refreshData: () => {},\r\n  user: null, // User object will be stored here\r\n  holdings: [],\r\n  positions: [],\r\n  orders: [],\r\n});\r\n\r\nexport const GeneralContextProvider = (props) => {\r\n  const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\r\n  const [isSellWindowOpen, setIsSellWindowOpen] = useState(false);\r\n  const [selectedStockUID, setSelectedStockUID] = useState(\"\");\r\n  const [holdings, setHoldings] = useState([]);\r\n  const [positions, setPositions] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  \r\n  // 1. State to hold the logged-in user's data\r\n  const [user, setUser] = useState(null);\r\n\r\n  // 2. Fetch the user once when the app loads\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:3002/me\", {\r\n          withCredentials: true, // This sends the secure session cookie\r\n        });\r\n        setUser(res.data); // Store the user object in our state\r\n      } catch (err) {\r\n        console.error(\"User not authenticated.\", err);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // 3. Make the data refresh function secure and dependent on the user\r\n  const refreshData = async () => {\r\n    if (!user) return; // Don't fetch if no user is logged in\r\n\r\n    try {\r\n      const [h, p, o] = await Promise.all([\r\n        // Ensure the cookie is sent with every request\r\n        axios.get(\"http://localhost:3002/allHoldings\", { withCredentials: true }),\r\n        axios.get(\"http://localhost:3002/allPositions\", { withCredentials: true }),\r\n        axios.get(\"http://localhost:3002/api/orders\", { withCredentials: true }),\r\n      ]);\r\n      setHoldings(h.data);\r\n      setPositions(p.data);\r\n      setOrders(o.data);\r\n    } catch (error) {\r\n      console.error(\"Error refreshing data:\", error);\r\n    }\r\n  };\r\n\r\n  // 4. Refresh the user's data only after they have been successfully identified\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, [user]); // This effect runs when the user state is set\r\n\r\n  const handleOpenBuyWindow = (uid) => {\r\n    setIsBuyWindowOpen(true);\r\n    setSelectedStockUID(uid);\r\n  };\r\n\r\n  const handleCloseBuyWindow = () => {\r\n    setIsBuyWindowOpen(false);\r\n    setSelectedStockUID(\"\");\r\n  };\r\n\r\n  const handleOpenSellWindow = (uid) => {\r\n    setIsSellWindowOpen(true);\r\n    setSelectedStockUID(uid);\r\n  };\r\n\r\n  const handleCloseSellWindow = () => {\r\n    setIsSellWindowOpen(false);\r\n    setSelectedStockUID(\"\");\r\n  };\r\n\r\n  return (\r\n    <GeneralContext.Provider\r\n      value={{\r\n        openBuyWindow: handleOpenBuyWindow,\r\n        closeBuyWindow: handleCloseBuyWindow,\r\n        openSellWindow: handleOpenSellWindow,\r\n        closeSellWindow: handleCloseSellWindow,\r\n        refreshData,\r\n        user, // 5. Provide the user object to all child components\r\n        holdings,\r\n        positions,\r\n        orders,\r\n      }}\r\n    >\r\n      {props.children}\r\n      {isBuyWindowOpen && <BuyActionWindow uid={selectedStockUID} />}\r\n      {isSellWindowOpen && <SellActionWindow uid={selectedStockUID} />}\r\n    </GeneralContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GeneralContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}